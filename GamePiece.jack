class GamePiece {

    field int RADIUS; // Constant Size of one piece
    field int DX; // Constant Length of one row
    field int x, y; // Coordinates of the piece on screen
    field boolean color; // True if the piece is black and False if white

    /** Constructs a new GamePiece with the given coordinates and color */
    constructor GamePiece new(int Ax, int Ay, boolean Acolor){
        let x = Ax;
        let y = Ay;
        let RADIUS = 13;
        let DX = 54;
        let color = Acolor;
        do draw();
        return this;
    }

    /** Moves the piece one column right (if possible) */
    method boolean moveRight(){
        if((x + DX) < 433) {
            do erase();
            let x = x + DX;
            do draw();
            return true;
        }
        return false;
    }

    /** Moves the piece one column left (if possible) */
    method boolean moveLeft(){
        if((x - DX) > 79) {
            do erase();
            let x = x - DX;
            do draw();
            return true;
        }
        return false;
    }

    /** Drops the piece to the board */
    method void drop(int height){
        while( y < height ){
            do Sys.wait(5);
            do erase();
            let y = y + 2;
            do draw();
        }
        return;
    }

    /** Draws the piece on the screen */
    method void draw(){
        do Screen.setColor(true);
        do Screen.drawCircle(x, y, RADIUS);
        if(~color){
            do Screen.setColor(false);
            do Screen.drawCircle(x, y, RADIUS-2);
        }
        return;
    }

    /** Erases the piece from the screen */
    method void erase(){
        do Screen.setColor(false);
        do Screen.drawCircle(x, y, RADIUS);
        return;
    }

    /** Disposes this piece */
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

}